version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: uks-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dockerhub
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dockerhub"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    build: ./backend/dockerhub-clone
    container_name: uks-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/dockerhub
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    restart: on-failure

  frontend:
    build: ./frontend
    container_name: uks-frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"

  redis:
    image: redis:7-alpine
    container_name: uks-redis
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    container_name: uks-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: uks-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres


volumes:
  postgres_data:
